// Code generated by protoc-gen-go. DO NOT EDIT.
// source: brokermsg.proto

/*
Package brokermsg is a generated protocol buffer package.

It is generated from these files:
	brokermsg.proto

It has these top-level messages:
	ParamToThird
	ResultToThird
	ParamFromThird
	ResultFromThird
	ParamToService
	ResultToService
	ParamFromService
	ResultFromService
*/
package brokermsg

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type EnumState int32

const (
	EnumState_SUCCESS EnumState = 0
	EnumState_FAILED  EnumState = 1
)

var EnumState_name = map[int32]string{
	0: "SUCCESS",
	1: "FAILED",
}
var EnumState_value = map[string]int32{
	"SUCCESS": 0,
	"FAILED":  1,
}

func (x EnumState) String() string {
	return proto.EnumName(EnumState_name, int32(x))
}
func (EnumState) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

type EnumMethod int32

const (
	EnumMethod_HttpGet    EnumMethod = 0
	EnumMethod_HttpPost   EnumMethod = 1
	EnumMethod_HttpDelete EnumMethod = 2
	EnumMethod_HttpPut    EnumMethod = 3
)

var EnumMethod_name = map[int32]string{
	0: "HttpGet",
	1: "HttpPost",
	2: "HttpDelete",
	3: "HttpPut",
}
var EnumMethod_value = map[string]int32{
	"HttpGet":    0,
	"HttpPost":   1,
	"HttpDelete": 2,
	"HttpPut":    3,
}

func (x EnumMethod) String() string {
	return proto.EnumName(EnumMethod_name, int32(x))
}
func (EnumMethod) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

type ParamToThird struct {
	TID     string `protobuf:"bytes,1,opt,name=TID" json:"TID,omitempty"`
	APICODE string `protobuf:"bytes,2,opt,name=APICODE" json:"APICODE,omitempty"`
	Data    []byte `protobuf:"bytes,3,opt,name=Data,proto3" json:"Data,omitempty"`
}

func (m *ParamToThird) Reset()                    { *m = ParamToThird{} }
func (m *ParamToThird) String() string            { return proto.CompactTextString(m) }
func (*ParamToThird) ProtoMessage()               {}
func (*ParamToThird) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *ParamToThird) GetTID() string {
	if m != nil {
		return m.TID
	}
	return ""
}

func (m *ParamToThird) GetAPICODE() string {
	if m != nil {
		return m.APICODE
	}
	return ""
}

func (m *ParamToThird) GetData() []byte {
	if m != nil {
		return m.Data
	}
	return nil
}

type ResultToThird struct {
	State  EnumState         `protobuf:"varint,1,opt,name=State,enum=brokermsg.EnumState" json:"State,omitempty"`
	Method EnumMethod        `protobuf:"varint,2,opt,name=Method,enum=brokermsg.EnumMethod" json:"Method,omitempty"`
	Head   map[string]string `protobuf:"bytes,3,rep,name=Head" json:"Head,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	Body   []byte            `protobuf:"bytes,4,opt,name=Body,proto3" json:"Body,omitempty"`
	URL    string            `protobuf:"bytes,5,opt,name=URL" json:"URL,omitempty"`
}

func (m *ResultToThird) Reset()                    { *m = ResultToThird{} }
func (m *ResultToThird) String() string            { return proto.CompactTextString(m) }
func (*ResultToThird) ProtoMessage()               {}
func (*ResultToThird) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *ResultToThird) GetState() EnumState {
	if m != nil {
		return m.State
	}
	return EnumState_SUCCESS
}

func (m *ResultToThird) GetMethod() EnumMethod {
	if m != nil {
		return m.Method
	}
	return EnumMethod_HttpGet
}

func (m *ResultToThird) GetHead() map[string]string {
	if m != nil {
		return m.Head
	}
	return nil
}

func (m *ResultToThird) GetBody() []byte {
	if m != nil {
		return m.Body
	}
	return nil
}

func (m *ResultToThird) GetURL() string {
	if m != nil {
		return m.URL
	}
	return ""
}

type ParamFromThird struct {
	TID     string `protobuf:"bytes,1,opt,name=TID" json:"TID,omitempty"`
	APICODE string `protobuf:"bytes,2,opt,name=APICODE" json:"APICODE,omitempty"`
	Data    []byte `protobuf:"bytes,3,opt,name=Data,proto3" json:"Data,omitempty"`
}

func (m *ParamFromThird) Reset()                    { *m = ParamFromThird{} }
func (m *ParamFromThird) String() string            { return proto.CompactTextString(m) }
func (*ParamFromThird) ProtoMessage()               {}
func (*ParamFromThird) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *ParamFromThird) GetTID() string {
	if m != nil {
		return m.TID
	}
	return ""
}

func (m *ParamFromThird) GetAPICODE() string {
	if m != nil {
		return m.APICODE
	}
	return ""
}

func (m *ParamFromThird) GetData() []byte {
	if m != nil {
		return m.Data
	}
	return nil
}

type ResultFromThird struct {
	State EnumState         `protobuf:"varint,1,opt,name=State,enum=brokermsg.EnumState" json:"State,omitempty"`
	Head  map[string]string `protobuf:"bytes,3,rep,name=Head" json:"Head,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	Body  []byte            `protobuf:"bytes,4,opt,name=Body,proto3" json:"Body,omitempty"`
}

func (m *ResultFromThird) Reset()                    { *m = ResultFromThird{} }
func (m *ResultFromThird) String() string            { return proto.CompactTextString(m) }
func (*ResultFromThird) ProtoMessage()               {}
func (*ResultFromThird) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

func (m *ResultFromThird) GetState() EnumState {
	if m != nil {
		return m.State
	}
	return EnumState_SUCCESS
}

func (m *ResultFromThird) GetHead() map[string]string {
	if m != nil {
		return m.Head
	}
	return nil
}

func (m *ResultFromThird) GetBody() []byte {
	if m != nil {
		return m.Body
	}
	return nil
}

type ParamToService struct {
	Version string `protobuf:"bytes,1,opt,name=Version" json:"Version,omitempty"`
	APICODE string `protobuf:"bytes,2,opt,name=APICODE" json:"APICODE,omitempty"`
	Data    []byte `protobuf:"bytes,3,opt,name=Data,proto3" json:"Data,omitempty"`
}

func (m *ParamToService) Reset()                    { *m = ParamToService{} }
func (m *ParamToService) String() string            { return proto.CompactTextString(m) }
func (*ParamToService) ProtoMessage()               {}
func (*ParamToService) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{4} }

func (m *ParamToService) GetVersion() string {
	if m != nil {
		return m.Version
	}
	return ""
}

func (m *ParamToService) GetAPICODE() string {
	if m != nil {
		return m.APICODE
	}
	return ""
}

func (m *ParamToService) GetData() []byte {
	if m != nil {
		return m.Data
	}
	return nil
}

type ResultToService struct {
	State  EnumState         `protobuf:"varint,1,opt,name=State,enum=brokermsg.EnumState" json:"State,omitempty"`
	Method EnumMethod        `protobuf:"varint,2,opt,name=Method,enum=brokermsg.EnumMethod" json:"Method,omitempty"`
	Head   map[string]string `protobuf:"bytes,3,rep,name=Head" json:"Head,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	Body   []byte            `protobuf:"bytes,4,opt,name=Body,proto3" json:"Body,omitempty"`
	URL    string            `protobuf:"bytes,5,opt,name=URL" json:"URL,omitempty"`
}

func (m *ResultToService) Reset()                    { *m = ResultToService{} }
func (m *ResultToService) String() string            { return proto.CompactTextString(m) }
func (*ResultToService) ProtoMessage()               {}
func (*ResultToService) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{5} }

func (m *ResultToService) GetState() EnumState {
	if m != nil {
		return m.State
	}
	return EnumState_SUCCESS
}

func (m *ResultToService) GetMethod() EnumMethod {
	if m != nil {
		return m.Method
	}
	return EnumMethod_HttpGet
}

func (m *ResultToService) GetHead() map[string]string {
	if m != nil {
		return m.Head
	}
	return nil
}

func (m *ResultToService) GetBody() []byte {
	if m != nil {
		return m.Body
	}
	return nil
}

func (m *ResultToService) GetURL() string {
	if m != nil {
		return m.URL
	}
	return ""
}

type ParamFromService struct {
	Version string `protobuf:"bytes,1,opt,name=Version" json:"Version,omitempty"`
	APICODE string `protobuf:"bytes,2,opt,name=APICODE" json:"APICODE,omitempty"`
	Data    []byte `protobuf:"bytes,3,opt,name=Data,proto3" json:"Data,omitempty"`
}

func (m *ParamFromService) Reset()                    { *m = ParamFromService{} }
func (m *ParamFromService) String() string            { return proto.CompactTextString(m) }
func (*ParamFromService) ProtoMessage()               {}
func (*ParamFromService) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{6} }

func (m *ParamFromService) GetVersion() string {
	if m != nil {
		return m.Version
	}
	return ""
}

func (m *ParamFromService) GetAPICODE() string {
	if m != nil {
		return m.APICODE
	}
	return ""
}

func (m *ParamFromService) GetData() []byte {
	if m != nil {
		return m.Data
	}
	return nil
}

type ResultFromService struct {
	State EnumState         `protobuf:"varint,1,opt,name=State,enum=brokermsg.EnumState" json:"State,omitempty"`
	Head  map[string]string `protobuf:"bytes,3,rep,name=Head" json:"Head,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	Body  []byte            `protobuf:"bytes,4,opt,name=Body,proto3" json:"Body,omitempty"`
}

func (m *ResultFromService) Reset()                    { *m = ResultFromService{} }
func (m *ResultFromService) String() string            { return proto.CompactTextString(m) }
func (*ResultFromService) ProtoMessage()               {}
func (*ResultFromService) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{7} }

func (m *ResultFromService) GetState() EnumState {
	if m != nil {
		return m.State
	}
	return EnumState_SUCCESS
}

func (m *ResultFromService) GetHead() map[string]string {
	if m != nil {
		return m.Head
	}
	return nil
}

func (m *ResultFromService) GetBody() []byte {
	if m != nil {
		return m.Body
	}
	return nil
}

func init() {
	proto.RegisterType((*ParamToThird)(nil), "brokermsg.ParamToThird")
	proto.RegisterType((*ResultToThird)(nil), "brokermsg.ResultToThird")
	proto.RegisterType((*ParamFromThird)(nil), "brokermsg.ParamFromThird")
	proto.RegisterType((*ResultFromThird)(nil), "brokermsg.ResultFromThird")
	proto.RegisterType((*ParamToService)(nil), "brokermsg.ParamToService")
	proto.RegisterType((*ResultToService)(nil), "brokermsg.ResultToService")
	proto.RegisterType((*ParamFromService)(nil), "brokermsg.ParamFromService")
	proto.RegisterType((*ResultFromService)(nil), "brokermsg.ResultFromService")
	proto.RegisterEnum("brokermsg.EnumState", EnumState_name, EnumState_value)
	proto.RegisterEnum("brokermsg.EnumMethod", EnumMethod_name, EnumMethod_value)
}

func init() { proto.RegisterFile("brokermsg.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 448 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xbc, 0x94, 0xcf, 0x8b, 0xd3, 0x40,
	0x14, 0xc7, 0x77, 0x92, 0xb6, 0x6b, 0xdf, 0xd6, 0xec, 0x38, 0xac, 0x10, 0x3c, 0x95, 0xb0, 0x48,
	0x29, 0xd8, 0x43, 0x05, 0x5d, 0xf6, 0xb6, 0x36, 0x59, 0xb7, 0x50, 0x35, 0x4c, 0x52, 0x11, 0x6f,
	0x59, 0x33, 0xb8, 0xa5, 0x4d, 0x67, 0x99, 0x4c, 0x16, 0x72, 0xf4, 0xe0, 0x7f, 0xe6, 0xc1, 0x3f,
	0x4b, 0x66, 0xf2, 0xcb, 0xaa, 0xa0, 0x2d, 0x75, 0x6f, 0xf3, 0xe6, 0x7d, 0xf3, 0xcd, 0xf7, 0x7d,
	0xf2, 0x08, 0x1c, 0x5f, 0x0b, 0xbe, 0x64, 0x22, 0x49, 0x3f, 0x8f, 0x6e, 0x05, 0x97, 0x9c, 0x74,
	0xeb, 0x0b, 0xe7, 0x2d, 0xf4, 0xfc, 0x48, 0x44, 0x49, 0xc8, 0xc3, 0x9b, 0x85, 0x88, 0x09, 0x06,
	0x33, 0x9c, 0xba, 0x36, 0xea, 0xa3, 0x41, 0x97, 0xaa, 0x23, 0xb1, 0xe1, 0xf0, 0xc2, 0x9f, 0x4e,
	0xde, 0xb9, 0x9e, 0x6d, 0xe8, 0xdb, 0xaa, 0x24, 0x04, 0x5a, 0x6e, 0x24, 0x23, 0xdb, 0xec, 0xa3,
	0x41, 0x8f, 0xea, 0xb3, 0xf3, 0xc5, 0x80, 0x87, 0x94, 0xa5, 0xd9, 0x4a, 0x56, 0x8e, 0x43, 0x68,
	0x07, 0x32, 0x92, 0x4c, 0x7b, 0x5a, 0xe3, 0x93, 0x51, 0x93, 0xc6, 0x5b, 0x67, 0x89, 0xee, 0xd1,
	0x42, 0x42, 0x9e, 0x41, 0xe7, 0x0d, 0x93, 0x37, 0x3c, 0xd6, 0xaf, 0xb2, 0xc6, 0x8f, 0x7f, 0x11,
	0x17, 0x4d, 0x5a, 0x8a, 0xc8, 0x0b, 0x68, 0x5d, 0xb1, 0x28, 0xb6, 0xcd, 0xbe, 0x39, 0x38, 0x1a,
	0x3b, 0x3f, 0x89, 0x37, 0x22, 0x8c, 0x94, 0xc8, 0x5b, 0x4b, 0x91, 0x53, 0xad, 0x57, 0xc1, 0x5f,
	0xf1, 0x38, 0xb7, 0x5b, 0x45, 0x70, 0x75, 0x56, 0x83, 0xcf, 0xe9, 0xcc, 0x6e, 0x17, 0x83, 0xcf,
	0xe9, 0xec, 0xc9, 0x4b, 0xe8, 0xd6, 0x0f, 0xaa, 0xf6, 0x92, 0xe5, 0x15, 0x97, 0x25, 0xcb, 0xc9,
	0x09, 0xb4, 0xef, 0xa2, 0x55, 0xc6, 0x4a, 0x2a, 0x45, 0x71, 0x6e, 0x9c, 0x21, 0xc7, 0x07, 0x4b,
	0x33, 0xbd, 0x14, 0x3c, 0xd9, 0x0f, 0xd5, 0x6f, 0x08, 0x8e, 0x8b, 0x91, 0x1a, 0xcf, 0x6d, 0xb8,
	0x9e, 0x6d, 0x80, 0x3a, 0xfd, 0x0d, 0x54, 0xed, 0xfa, 0x2f, 0xa8, 0x76, 0x07, 0xf3, 0xa1, 0x04,
	0x13, 0xf2, 0x80, 0x89, 0xbb, 0xc5, 0x27, 0xa6, 0x30, 0xbc, 0x67, 0x22, 0x5d, 0xf0, 0x75, 0xe9,
	0x50, 0x95, 0x5b, 0x02, 0xfa, 0x6a, 0x54, 0x80, 0x1a, 0xef, 0xff, 0xb8, 0x78, 0x7f, 0xe3, 0x59,
	0x87, 0xb8, 0xef, 0xd5, 0xfb, 0x08, 0xb8, 0x5e, 0xbd, 0x7d, 0x33, 0xfe, 0x8e, 0xe0, 0x51, 0xb3,
	0x2e, 0xbb, 0x50, 0x3e, 0xdf, 0xc0, 0xf6, 0xf4, 0x8f, 0x6b, 0xb8, 0x05, 0xb8, 0x9d, 0x31, 0x0d,
	0x4f, 0xa1, 0x5b, 0x87, 0x23, 0x47, 0x70, 0x18, 0xcc, 0x27, 0x13, 0x2f, 0x08, 0xf0, 0x01, 0x01,
	0xe8, 0x5c, 0x5e, 0x4c, 0x67, 0x9e, 0x8b, 0xd1, 0xd0, 0x05, 0x68, 0xbe, 0xbd, 0x92, 0x5d, 0x49,
	0x79, 0xfb, 0x9a, 0x49, 0x7c, 0x40, 0x7a, 0xf0, 0x40, 0x15, 0x3e, 0x4f, 0x25, 0x46, 0xc4, 0x02,
	0x50, 0x95, 0xcb, 0x56, 0x4c, 0x32, 0x6c, 0x54, 0x52, 0x3f, 0x93, 0xd8, 0xbc, 0xee, 0xe8, 0x7f,
	0xee, 0xf3, 0x1f, 0x01, 0x00, 0x00, 0xff, 0xff, 0xb0, 0x4e, 0xc2, 0xd6, 0x86, 0x05, 0x00, 0x00,
}
